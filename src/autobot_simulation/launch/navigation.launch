<?xml version="1.0" encoding="utf-8"?>
<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"
    value="$(find autobot_simulation)/worlds/wall.world" />
    <arg name="paused" value="false" />
    <arg name="use_sim_time" value="true" />
    <arg name="gui" value="true" />
    <arg name="recording" value="false" />
    <arg name="debug" value="false" />
  </include>
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
  command="$(find xacro)/xacro '$(find autobot_simulation)/urdf/ebot_trolley.xacro'" />
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
  respawn="false" output="screen"
  args="-x 0 -y 0 -z 0 -Y 1.57 -urdf -model ebot -param robot_description" />
  <!-- Publishes joint positions - Joint state publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher"
  type="joint_state_publisher" />
  <!-- Uses URDF and Joint positions to compute transforms of robot -->
  <node name="robot_state_publisher" pkg="robot_state_publisher"
  type="robot_state_publisher" />
  <!-- Map Server -->
  <node pkg="map_server" name="map_server" type="map_server"
  args="'$(find autobot_simulation)/maps/map.yaml'" />
  <!-- AMCL node -->
  <node pkg="amcl" type="amcl" name="amcl" output="screen"
  args="scan:=/ebot/laser/scan">
    <rosparam file="$(find autobot_simulation)/config/amcl.yaml"
    command="load" />
  </node>
  <!-- Move Base - Navigation -->
  <node pkg="move_base" type="move_base" name="move_base"
  output="screen">
    <rosparam file="$(find autobot_simulation)/config/costmap_common_params.yaml"
    command="load" ns="global_costmap" />
    <rosparam file="$(find autobot_simulation)/config/costmap_common_params.yaml"
    command="load" ns="local_costmap" />
    <rosparam file="$(find autobot_simulation)/config/local_costmap_params.yaml"
    command="load" />
    <rosparam file="$(find autobot_simulation)/config/global_costmap_params.yaml"
    command="load" />
    <rosparam file="$(find autobot_simulation)/config/global_planner_params.yaml"
    command="load" />
    <rosparam file="$(find autobot_simulation)/config/move_base_params.yaml"
    command="load" />
    <!-- GLOBAL PLANNERS -->
    <!--param name="base_global_planner" value="navfn/NavfnROS" /-->
    <param name="base_global_planner"
    value="global_planner/GlobalPlanner" />
    <!-- LOCAL PLANNERS -->
    <rosparam file="$(find autobot_simulation)/config/dwa_local_planner.yaml"
    command="load" />
    <param name="base_local_planner"
    value="dwa_local_planner/DWAPlannerROS" />
    <!-- <rosparam file="$(find autobot_simulation)/config/trajectory_planner.yaml" command="load" /> -->
    <!-- <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>  -->
    <!-- <remap from="/cmd_vel"  to="/diffbot_controller/cmd_vel"/> -->
    <!--rosparam file="$(find autobot_simulation)/config/teb_local_planner.yaml" command="load" />
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" /-->
    <!-- <remap from="/cmd_vel" to="/diffbot_controller/cmd_vel"/> -->
  </node>
  <node type="rviz" name="rviz" pkg="rviz"
  args="-d $(find autobot_simulation)/rviz/gmapping.rviz" />
</launch>
